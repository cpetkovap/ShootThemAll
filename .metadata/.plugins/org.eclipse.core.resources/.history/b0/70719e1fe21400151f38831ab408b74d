package controller;

import java.util.Random;

import model.Enemy;
import model.Weapon;

import org.json.simple.JSONArray;
import org.json.simple.JSONObject;

public class LevelBuilder {
	final int maxLevel = LevelSingleton.getMaxLevel();
	
	public JSONObject buildLevel(int userID, int level){
		Random rand = new Random();
		JSONObject objLevel = new JSONObject();
		objLevel.put("userHealth", 3);
		
		

		/*
		 * проверка за валидно ниво от базата данни : userLevel = нивото до което е стигнал потребителя, но не е минал
		 */
		
		if(level > maxLevel){
			level = maxLevel;
		}
		
		int numEnemies = 10 + ( (level - 1) * 7);
		int randomNum[] = new int[level];
		Enemy enemies[] = new Enemy[level];
		
		randomNum[0] = numEnemies;
		for(int i = randomNum.length - 1; i > 0; i--){
			randomNum[i] = rand.nextInt(randomNum[0]) + 1;
			randomNum[0] = numEnemies - randomNum[i];
		}
		
//		for(int i = 0; i < randomNum.length; i++){
//			System.out.println(randomNum[i]);
//		}
		
		Weapon weapon = new Weapon(1, 1, 100);
		/*
		 * тук оръжието ще си го вземем от базата данни като използваме userId
		 * 
		 */
		
		JSONObject weaponObj = new JSONObject();
		weaponObj.put("type", weapon.getType());
		weaponObj.put("damage", weapon.getDamage());
		
		for(int i = 0 ; i < enemies.length; i++){
			enemies[i] = new Enemy(i+1, i+1, (maxLevel * 200) + 100 - (i+1) * 200, i+1);
		}
		
		int bullets = 0;
		for(int i = 0; i < randomNum.length; i++){
			bullets += randomNum[i] * Math.ceil(enemies[i].getDamage()/weapon.getDamage());
			
		}
		
		System.out.println("level =" + level);
		System.out.println("max level =" + maxLevel);
		
		int randomBullets = rand.nextInt((maxLevel - level) * 3 + 1) + (maxLevel - level) ; 
		System.out.println("Bonus bullets = " + randomBullets);
		bullets += randomBullets;
		
		objLevel.put("bullets", bullets);
		objLevel.put("weapon", weaponObj);
		
		
		JSONArray enemiesArr = new JSONArray();
		for(int i = 0 ; i < level; i++){
			JSONObject enemyObj = new JSONObject();
			enemyObj.put("type", enemies[i].getType());
			enemyObj.put("health", enemies[i].getHealth());
			enemyObj.put("duration", enemies[i].getDuration());
			enemyObj.put("damage", enemies[i].getDamage());
			enemyObj.put("count", randomNum[i]);
			enemiesArr.add(enemyObj;
		}
		
		objLevel.put("enemies", enemiesArr);
	
		
		
		return objLevel;
	}

}
