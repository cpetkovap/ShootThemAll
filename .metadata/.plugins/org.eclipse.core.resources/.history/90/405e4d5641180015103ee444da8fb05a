package controller;

import java.io.IOException;
import java.util.Properties;

import javax.mail.BodyPart;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.Multipart;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeBodyPart;
import javax.mail.internet.MimeMessage;
import javax.mail.internet.MimeMultipart;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

/**
 * Servlet implementation class SaveLevelInfo
 */
@WebServlet("/levelManager")
public class LevelManager extends HttpServlet {
	private static final long serialVersionUID = 1L;

	public LevelManager() {

	}
	
	@Override
	protected void doGet(HttpServletRequest req, HttpServletResponse resp)
			throws ServletException, IOException {
		// TODO Auto-generated method stub
		doPost(req, resp);
	}

//	protected void doGet(HttpServletRequest request,
//			HttpServletResponse response) throws ServletException, IOException {
//		String user = request.getParameter("userId");
//		String userLevel = request.getParameter("level");
//
//		// test
//		user = "1";
//		userLevel = "2";
//
//		JSONObject result = new JSONObject();
//
//		if (user != null && userLevel != null) {
//
//			int userId = Integer.parseInt(user);
//			int level = Integer.parseInt(userLevel);
//
//			LevelBuilder levelBuilder = new LevelBuilder();
//			result = levelBuilder.buildLevel(userId, level);
//
//			response.setStatus(200);
//
//		} else {
//
//			response.setStatus(400);
//			result.put("error", "Invalid parameter");
//		}
//
//		System.out.println(result.toJSONString());
//		response.getWriter().write(result.toJSONString());
//	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse
	 *      response)
	 */
	protected void doPost(HttpServletRequest request,
			HttpServletResponse response) throws ServletException, IOException {
		String line = request.getReader().readLine();

		// test
		JSONObject test = new JSONObject();
		test.put("userId", 1);
		test.put("score", 10);
		line = test.toJSONString();

		String message = null;
		JSONObject result = new JSONObject();

		JSONParser parser = new JSONParser();
		try {
			JSONObject scoreObj = (JSONObject) parser.parse(line);
			int userId = Integer.parseInt(scoreObj.get("userId").toString());
			int score = Integer.parseInt(scoreObj.get("score").toString());

			if (score > 0) {
				/*
				 * Тук записваме точките на потребителя с userId в базата данни
				 * Правим проверка дали потребителя е минал нечии точки и
				 * уведомяваме през мейл
				 * 
				 * Тук обновяваме освен записа в базата данни, но и кеша с
				 * потребители
				 */

				// мейл тест
				// Recipient's email ID needs to be mentioned.
			      String to = "abcd@gmail.com";

			      // Sender's email ID needs to be mentioned
			      String from = "web@gmail.com";

			      // Assuming you are sending email from localhost
			      String host = "localhost";

			      // Get system properties
			      Properties properties = System.getProperties();

			      // Setup mail server
			      properties.setProperty("mail.smtp.host", host);

			      // Get the default Session object.
			      Session session = Session.getDefaultInstance(properties);

			      try{
			         // Create a default MimeMessage object.
			         MimeMessage meilMessage = new MimeMessage(session);

			         // Set From: header field of the header.
			         meilMessage.setFrom(new InternetAddress(from));

			         // Set To: header field of the header.
			         meilMessage.addRecipient(Message.RecipientType.TO,
			                                  new InternetAddress(to));

			         // Set Subject: header field
			         meilMessage.setSubject("This is the Subject Line!");

			         // Create the message part 
			         BodyPart messageBodyPart = new MimeBodyPart();

			         // Fill the message
			         messageBodyPart.setText("This is message body");
			         
			         // Create a multipar message
			         Multipart multipart = new MimeMultipart();

			         // Set text message part
			         multipart.addBodyPart(messageBodyPart);

			         

			         // Send the complete message parts
			         meilMessage.setContent(multipart );

			         // Send message
			         Transport.send(meilMessage);
			         System.out.println("Sent message successfully....");
			      }catch (MessagingException mex) {
			         mex.printStackTrace();
			      }

			
			
			message = "success";
			response.setStatus(200);
			result.put("message", message);

		} catch (ParseException e) {

			result.put("error", "Invalid JSON");
			response.setStatus(400);

		}
		System.out.println(result.toJSONString());
		response.getWriter().write(result.toJSONString());

	}

}
